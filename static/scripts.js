// –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å/—Å–∫—Ä—ã–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å
function togglePasswordVisibility(icon) {
    const input = icon.closest('.password-wrapper').querySelector('input');
    if (input.type === 'password') {
        input.type = 'text';
        icon.textContent = 'üôà';
    } else {
        input.type = 'password';
        icon.textContent = 'üëÅÔ∏è';
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞/—Å–±—Ä–æ—Å —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function applyBackground(url) {
    document.body.style.backgroundImage = `url(${url})`;
    document.body.classList.add('has-background');
}
function clearBackground() {
    document.body.style.backgroundImage = '';
    document.body.classList.remove('has-background');
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è inline onclick –∏ –¥–ª—è —Å–ª—É—à–∞—Ç–µ–ª—è
function toggleTheme() {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
    const isDark = document.body.classList.contains('theme-dark');
    const newTheme = isDark ? 'theme-light' : 'theme-dark';
    applyTheme(newTheme);
}

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∏ —Å–º–µ–Ω–∏—Ç—å –ª–æ–≥–æ—Ç–∏–ø
function applyTheme(theme) {
    document.body.classList.remove('theme-light', 'theme-dark');
    document.body.classList.add(theme);
    localStorage.setItem('theme', theme);
    changeLogo(theme);
}

// –ú–µ–Ω—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –ø–æ data-–∞—Ç—Ä–∏–±—É—Ç–∞–º
function changeLogo(theme) {
    const logo = document.getElementById('logo');
    if (!logo) return;
    const lightSrc = logo.getAttribute('data-light-src');
    const darkSrc  = logo.getAttribute('data-dark-src');
    logo.src = (theme === 'theme-dark' ? darkSrc : lightSrc) || logo.src;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–æ–Ω–∞
function handleBackgroundUpload(event) {
    const file = event.target.files[0];
    if (!file) return;
    if (!file.type.startsWith('image/')) {
        return alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!');
    }
    if (file.size > 5 * 1024 * 1024) {
        return alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 5MB.');
    }
    const reader = new FileReader();
    reader.onload = e => {
        applyBackground(e.target.result);
        localStorage.setItem('userBackground', e.target.result);
    };
    reader.readAsDataURL(file);
}

// –í–µ—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', () => {
    // 1) —Ñ–æ–Ω
    const savedBg = localStorage.getItem('userBackground');
    if (savedBg) applyBackground(savedBg);

    // 2) —Ç–µ–º–∞
    const savedTheme = localStorage.getItem('theme') || 'theme-light';
    applyTheme(savedTheme);

    // 3) –≥–ª–∞–∑–∏–∫–∏
    document.querySelectorAll('.toggle-password')
            .forEach(icon => icon.addEventListener('click', () => togglePasswordVisibility(icon)));

    // 4) –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    const btn = document.getElementById('toggle-theme');
    if (btn) btn.addEventListener('click', toggleTheme);

    // 5) –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–±—Ä–æ—Å —Ñ–æ–Ω–∞
    const inp = document.getElementById('background-input');
    if (inp) inp.addEventListener('change', handleBackgroundUpload);
    const reset = document.getElementById('reset-background');
    if (reset) reset.addEventListener('click', () => {
        localStorage.removeItem('userBackground');
        clearBackground();
        alert('–§–æ–Ω —Å–±—Ä–æ—à–µ–Ω!');
    });
});
